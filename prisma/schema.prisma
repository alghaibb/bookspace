generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(uuid())
  username      String    @unique
  displayName   String
  email         String?   @unique
  password      String?
  googleId      String?   @unique
  emailVerified Boolean   @default(false)
  avatarUrl     String?
  bio           String?
  lockoutUntil  DateTime?
  loginAttempts Int       @default(0)
  lockoutReason String?
  sessions      Session[]

  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  ResetPassword     ResetPassword[]
  EmailVerification EmailVerification[]

  @@map("users")
}

model EmailVerification {
  id         String    @id @default(uuid())
  email      String
  userId     String
  otp        String
  expiresAt  DateTime
  createdAt  DateTime  @default(now())
  verifiedAt DateTime?
  User       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("email_verifications")
}

model ResetPassword {
  id        String    @id @default(uuid())
  email     String
  userId    String
  token     String    @unique
  expiresAt DateTime
  createdAt DateTime  @default(now())
  resetAt   DateTime?
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("reset_passwords")
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("sessions")
}
